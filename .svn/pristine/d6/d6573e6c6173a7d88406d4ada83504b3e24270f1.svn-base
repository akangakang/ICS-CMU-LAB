#name:Liu shuchang
#ID:518021910789


# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp	# Set up stack pointer
	call main 		# Execute main program 
	halt 			# Terminate program 

# Sample linked list
.align 8
ele1:
	.quad 0x00a
	.quad ele2
ele2:
	.quad 0x0b0
	.quad ele3
ele3:
	.quad 0xc00
	.quad 0

main:
	irmovq ele1, %rdi	# ls is a pointer == address
	call sum_list
	ret 

# long sum_list ( list_ptr ls)
# ls in %rdi
sum_list:
	irmovq $8, %r8		# constant 8 for finding  ls->next
	xorq %rax, %rax		# val = 0 = %rax
	jmp	test		# goto test
loop:
	mrmovq (%rdi), %r10	# get ls->val
	addq %r10, %rax		# add to val
	addq %r8, %rdi		# !!!though last instr set CC ,this addq set againn ,so I put the test(ls==0) into  test
	mrmovq (%rdi), %rdi	# ls = ls -> next
test:
	andq %rdi, %rdi         # test if ls==0 , set CC 
	jne loop		# stop when 0
	ret 			# return 

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
